diff --git a/guava/src/com/google/common/base/Strings.java b/guava/src/com/google/common/base/Strings.java
index e56bf1c481..459acbca1a 100644
--- a/guava/src/com/google/common/base/Strings.java
+++ b/guava/src/com/google/common/base/Strings.java
@@ -265,6 +265,7 @@ public final class Strings {
    * @since 25.1
    */
   // TODO(diamondm) consider using Arrays.toString() for array parameters
+  @SuppressWarnings("IdentityConversion")
   public static String lenientFormat(
       @CheckForNull String template, @CheckForNull @Nullable Object... args) {
     template = String.valueOf(template); // null -> "null"
diff --git a/guava/src/com/google/common/graph/UndirectedNetworkConnections.java b/guava/src/com/google/common/graph/UndirectedNetworkConnections.java
index 190897f882..f11f98867c 100644
--- a/guava/src/com/google/common/graph/UndirectedNetworkConnections.java
+++ b/guava/src/com/google/common/graph/UndirectedNetworkConnections.java
@@ -43,6 +43,7 @@ final class UndirectedNetworkConnections<N, E> extends AbstractUndirectedNetwork
     return new UndirectedNetworkConnections<>(HashBiMap.<E, N>create(EXPECTED_DEGREE));
   }

+  @SuppressWarnings("IdentityConversion")
   static <N, E> UndirectedNetworkConnections<N, E> ofImmutable(Map<E, N> incidentEdges) {
     return new UndirectedNetworkConnections<>(ImmutableBiMap.copyOf(incidentEdges));
   }
diff --git a/guava/src/com/google/common/graph/DirectedNetworkConnections.java b/guava/src/com/google/common/graph/DirectedNetworkConnections.java
index e1db65708e..9d70c790ee 100644
--- a/guava/src/com/google/common/graph/DirectedNetworkConnections.java
+++ b/guava/src/com/google/common/graph/DirectedNetworkConnections.java
@@ -44,6 +44,7 @@ final class DirectedNetworkConnections<N, E> extends AbstractDirectedNetworkConn
         HashBiMap.<E, N>create(EXPECTED_DEGREE), HashBiMap.<E, N>create(EXPECTED_DEGREE), 0);
   }

+  @SuppressWarnings("IdentityConversion")
   static <N, E> DirectedNetworkConnections<N, E> ofImmutable(
       Map<E, N> inEdges, Map<E, N> outEdges, int selfLoopCount) {
     return new DirectedNetworkConnections<>(
diff --git a/guava-testlib/src/com/google/common/collect/testing/google/MapGenerators.java b/guava-testlib/src/com/google/common/collect/testing/google/MapGenerators.java
index 35063e815d..3f445ca116 100644
--- a/guava-testlib/src/com/google/common/collect/testing/google/MapGenerators.java
+++ b/guava-testlib/src/com/google/common/collect/testing/google/MapGenerators.java
@@ -60,6 +60,7 @@ public class MapGenerators {

   public static class ImmutableMapCopyOfGenerator extends TestStringMapGenerator {
     @Override
+    @SuppressWarnings("IdentityConversion")
     protected Map<String, String> create(Entry<String, String>[] entries) {
       Map<String, String> builder = Maps.newLinkedHashMap();
       for (Entry<String, String> entry : entries) {
@@ -71,6 +72,7 @@ public class MapGenerators {

   public static class ImmutableMapCopyOfEntriesGenerator extends TestStringMapGenerator {
     @Override
+    @SuppressWarnings("IdentityConversion")
     protected Map<String, String> create(Entry<String, String>[] entries) {
       return ImmutableMap.copyOf(Arrays.asList(entries));
     }
@@ -162,6 +164,7 @@ public class MapGenerators {

   public static class ImmutableMapCopyOfEnumMapGenerator extends TestEnumMapGenerator {
     @Override
+    @SuppressWarnings("IdentityConversion")
     protected Map<AnEnum, String> create(Entry<AnEnum, String>[] entries) {
       EnumMap<AnEnum, String> map = new EnumMap<>(AnEnum.class);
       for (Entry<AnEnum, String> entry : entries) {
diff --git a/guava/src/com/google/common/collect/RegularImmutableSortedSet.java b/guava/src/com/google/common/collect/RegularImmutableSortedSet.java
index 572e0acbf5..fa17e67916 100644
--- a/guava/src/com/google/common/collect/RegularImmutableSortedSet.java
+++ b/guava/src/com/google/common/collect/RegularImmutableSortedSet.java
@@ -324,6 +324,7 @@ final class RegularImmutableSortedSet<E> extends ImmutableSortedSet<E> {
 
   @Override
   ImmutableSortedSet<E> createDescendingSet() {
+    @SuppressWarnings("StaticImport")
     Comparator<? super E> reversedOrder = Collections.reverseOrder(comparator);
     return isEmpty()
         ? emptySet(reversedOrder)
diff --git a/pom.xml b/pom.xml
index 13dd0985d3..3fa0827e02 100644
--- a/pom.xml
+++ b/pom.xml
@@ -22,6 +22,9 @@
     <maven-javadoc-plugin.additionalJOptions></maven-javadoc-plugin.additionalJOptions>
     <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+    <error-prone.version>v2.19.1-picnic-1</error-prone.version>
+    <error-prone-support.version>0.11.0</error-prone-support.version>
+    <maven.compiler.plugin.version>3.11.0</maven.compiler.plugin.version>
   </properties>
   <issueManagement>
     <system>GitHub Issues</system>
@@ -346,6 +349,56 @@
     </dependencies>
   </dependencyManagement>
   <profiles>
+    <profile>
+      <id>error-prone-compile</id>
+      <build>
+        <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-compiler-plugin</artifactId>
+            <version>${maven.compiler.plugin.version}</version>
+            <executions>
+              <execution>
+                <id>error-prone-compile</id>
+                <phase>compile</phase>
+                <goals>
+                  <goal>compile</goal>
+                </goals>
+                <configuration>
+                  <failOnError>false</failOnError>
+                  <source>1.8</source>
+                  <target>1.8</target>
+                  <compilerArgs>
+                    <arg>-Xpkginfo:always</arg>
+                    <arg>-XDcompilePolicy=simple</arg>
+                    <arg>
+                      -Xplugin:ErrorProne ${error-prone.flags} -Xep:CollectorMutability:OFF -Xep:FluxImplicitBlock:OFF -Xep:ScheduledTransactionTrace:OFF -XepOpt:Refaster:NamePattern=^(?!Immutable).*
+                    </arg>
+                  </compilerArgs>
+                  <annotationProcessorPaths>
+                    <path>
+                      <groupId>com.github.PicnicSupermarket.error-prone</groupId>
+                      <artifactId>error_prone_core</artifactId>
+                      <version>${error-prone.version}</version>
+                    </path>
+                    <path>
+                      <groupId>tech.picnic.error-prone-support</groupId>
+                      <artifactId>error-prone-contrib</artifactId>
+                      <version>${error-prone-support.version}</version>
+                    </path>
+                    <path>
+                      <groupId>tech.picnic.error-prone-support</groupId>
+                      <artifactId>refaster-runner</artifactId>
+                      <version>${error-prone-support.version}</version>
+                    </path>
+                  </annotationProcessorPaths>
+                </configuration>
+              </execution>
+            </executions>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
     <profile>
         <id>sonatype-oss-release</id>
         <build>
